|--------------------------------|
|- e3.mac	v5.1				-|
|- Written by Killians of PEQ.	-|
|--------------------------------|

#turbo 20

#include e3_Setup.inc

SUB Main(modeSelect)

  /declare i int local
  /if (!${Defined[messageType]}) /declare messageType string outer
  /call e3_Setup "${modeSelect}"
  /if (${Defined[modeSelect]} && ${modeSelect.Equal["raid"]}) {
    /echo Setting default messaging to raid for heals/buffs
    /varset messageType raid
  } else {
    /varset messageType group
    /echo Setting default messaging to group for heals/buffs
  }  
	  
:MainLoop
/if (${Debug}) /echo |- MainLoop ==>

	/if (!${Bool[${Me.Class}]}) {
		/endmacro
	} else {
|	************************************************************************************	|
|   ******************************* Background Functions *******************************	|
|	************************************************************************************	|
	
		/if (${ActionTaken}) /varset ActionTaken FALSE
		/if (${currentZone} != ${Zone.ID}) /call check_Zone
		/if (${Following} && !${Assisting}) /call check_Follow
		|/if (${autoTribute}) /call check_autoTribute
		/call check_Active
		/call check_Combat
		/call check_Idle
		
		/if (!${Bool[${Cursor}]}) {
		
			| Check if I'm casting
			/if (!${Me.Casting.ID} || ${Me.Casting.ID} && ${Me.Class.ShortName.Equal[BRD]}) {
		
				| Check LifeSupport
				/if (${lifeSupport.Size}) /call check_lifeSupport

				| Check Instant buffs
				/if (${BuffCheck} && ${InstantBuffs.Size} && ${Me.FreeBuffSlots} > ${MaxBuffs}) /call buffInstants
			}
		}

		/call Background_Events
		/doevents
		
		| If I'm not active, call mainFunctions
		/if (!${activeTimer}) {
		
			| check for a pending item exchange
			/if (${swapItemBack} && !${itemExchange_Timer}) {
				/call completePendingExchange
				/if (${Bool[${Macro.Return}]}) /varset swapItemBack FALSE
			}
		
|	******************************************************************************	|
|   ******************************* Main Functions *******************************	|
|	******************************************************************************	|
			/for i 1 to ${mainLoop_Array.Size}
				/if (${Bool[${mainLoop_Array[${i}]}]}) /call ${mainLoop_Array[${i}]}
			/if (!${ActionTaken}) /next i
		
		
|	**********************************************************************************	|
|   ******************************* Tertiary Functions *******************************	|
|	**********************************************************************************	|
		
			| Forage
			| /if (${autoForage}) /call AutoForage
			
			| MedBreak
			/if (${medBreak}) /call check_MedBreak
			
			| Maintain macro timers
			/if (${timerArray.Size}) /call check_macroTimers
		}
	}

/if (${Debug}) {
	/echo <== MainLoop -|
	/delay 5
}
/goto :MainLoop
/RETURN



|--------------------------------------------------------------------------------------------------------------------|
|- Background events and functions that are checked even while casting or otherwise considered active.		   		-|
|--------------------------------------------------------------------------------------------------------------------|
|- This function is checked constantly, included events and functions should have minimal character interaction.	-|
|--------------------------------------------------------------------------------------------------------------------|
SUB Background_Events

	/declare i int local

	/for i 1 to ${macroSetups.Size}
		/if (${Bool[${macroSetups[${i}]}]}) /call ${macroSetups[${i}]}_Background_Events
	/next i

/RETURN

sub announce(what)
  /if (${messageType.Equal[raid]}) {
    /rsay ${what}
  } else /if (${messageType.Equal[group]}) {
    /gsay ${what}
  }
/return
	